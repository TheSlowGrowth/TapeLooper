add_executable( libs_random_test_additive_combine additive_combine.cpp )
set_target_properties( libs_random_test_additive_combine PROPERTIES OUTPUT_NAME "additive_combine" )
add_test( libs_random_test_additive_combine additive_combine )
add_executable( libs_random_test_bernoulli_distribution bernoulli_distribution.cpp )
set_target_properties( libs_random_test_bernoulli_distribution PROPERTIES OUTPUT_NAME "bernoulli_distribution" )
add_test( libs_random_test_bernoulli_distribution bernoulli_distribution )
add_executable( libs_random_test_binomial_distribution binomial_distribution.cpp )
set_target_properties( libs_random_test_binomial_distribution PROPERTIES OUTPUT_NAME "binomial_distribution" )
add_test( libs_random_test_binomial_distribution binomial_distribution )
add_executable( libs_random_test_geometric_distribution geometric_distribution.cpp )
set_target_properties( libs_random_test_geometric_distribution PROPERTIES OUTPUT_NAME "geometric_distribution" )
add_test( libs_random_test_geometric_distribution geometric_distribution )
add_executable( libs_random_test_inversive_congruential inversive_congruential.cpp )
set_target_properties( libs_random_test_inversive_congruential PROPERTIES OUTPUT_NAME "inversive_congruential" )
add_test( libs_random_test_inversive_congruential inversive_congruential )
add_executable( libs_random_test_linear_congruential linear_congruential.cpp )
set_target_properties( libs_random_test_linear_congruential PROPERTIES OUTPUT_NAME "linear_congruential" )
add_test( libs_random_test_linear_congruential linear_congruential )
#add_executable( libs_random_test_mersenne_twister mersenne_twister.cpp )
#set_target_properties( libs_random_test_mersenne_twister PROPERTIES OUTPUT_NAME "mersenne_twister" )
#add_test( libs_random_test_mersenne_twister mersenne_twister )
add_executable( libs_random_test_normal_distribution normal_distribution.cpp )
set_target_properties( libs_random_test_normal_distribution PROPERTIES OUTPUT_NAME "normal_distribution" )
add_test( libs_random_test_normal_distribution normal_distribution )
add_executable( libs_random_test_random random.cpp )
set_target_properties( libs_random_test_random PROPERTIES OUTPUT_NAME "random" )
add_test( libs_random_test_random random )
add_executable( libs_random_test_shuffle_order shuffle_order.cpp )
set_target_properties( libs_random_test_shuffle_order PROPERTIES OUTPUT_NAME "shuffle_order" )
add_test( libs_random_test_shuffle_order shuffle_order )
add_executable( libs_random_test_taus88 taus88.cpp )
set_target_properties( libs_random_test_taus88 PROPERTIES OUTPUT_NAME "taus88" )
add_test( libs_random_test_taus88 taus88 )
add_executable( libs_random_test_uniform_01 uniform_01.cpp )
set_target_properties( libs_random_test_uniform_01 PROPERTIES OUTPUT_NAME "uniform_01" )
add_test( libs_random_test_uniform_01 uniform_01 )
add_executable( libs_random_test_uniform_int_distribution uniform_int_distribution.cpp )
set_target_properties( libs_random_test_uniform_int_distribution PROPERTIES OUTPUT_NAME "uniform_int_distribution" )
add_test( libs_random_test_uniform_int_distribution uniform_int_distribution )
add_executable( libs_random_test_uniform_real_distribution uniform_real_distribution.cpp )
set_target_properties( libs_random_test_uniform_real_distribution PROPERTIES OUTPUT_NAME "uniform_real_distribution" )
add_test( libs_random_test_uniform_real_distribution uniform_real_distribution )
add_executable( libs_random_test_uniform_smallint uniform_smallint.cpp )
set_target_properties( libs_random_test_uniform_smallint PROPERTIES OUTPUT_NAME "uniform_smallint" )
add_test( libs_random_test_uniform_smallint uniform_smallint )
